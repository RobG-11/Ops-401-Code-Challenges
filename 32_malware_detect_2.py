# Script: 32 - Signature-based Malware Detection Part 2 of 3 - INCOMPLETE
# Author: Robert Gregor
# Date of latest revision: 31 MAY 23

# Objectives (PART II) - Continue developing your Python malware detection tool
    # Alter your search code to recursively scan each file and folder in the user input directory path and print it to the screen
    # For each file scanned within the scope of your search directory:
        # Generate the file’s MD5 hash using Hashlib
        # Assign the MD5 hash to a variable
        # Print variable to  screen along with timestamp, file name, file size, and complete (not symbolic) file path

# My Sources (PART II)
    # [hashlib — Secure hashes and message digests](https://docs.python.org/3/library/hashlib.html)
    # [Python Program to Find Hash of File](https://www.programiz.com/python-programming/examples/hash-file)

#!/usr/bin/env python

# Import cross-platform modules
import os
import fnmatch

# Define file_search function and arguements
def file_search(file_name, dir_name):
    # Initialize an empty list
    search_results = []
    # for loop iterates through directory and os.walk generates file names
    for dirpath, dirnames, filenames in os.walk(dir_name):
        # Nested loop iterates through file names in list
        for file in filenames:
            # Conditional determines if current file name matches user supplied file name
            if fnmatch.fnmatch(file, file_name):
                # Joins directory path with file name and appends to search_results list
                search_results.append(os.path.join(dirpath, file))
    # Returns search_result list
    return search_results

while True:
    # Request user input for file_name and dir_name variables
    file_name = str(input("\nPlease enter the name of the file you would like to search for: "))
    dir_name = str(input("\nPlease enter the name of the directory you would like to search in: "))
    # Declares files_found variable equal to results of file_search function
    files_found = file_search(file_name, dir_name)
    # for loop iterates through files in files_found list
    for file in files_found:
        print()
        # Prints found file paths to terminal
        print(f"File found: {file}")
    # Prints total files searched and found
    print("\nTotal files searched:", sum([len(files) for r, d, files in os.walk(dir_name)]))
    print("\nTotal files found:", len(files_found))
